{"version":3,"sources":["skylark-security-codec.js"],"names":["define","skylark","attach","codec","base64","p","codetab","encode","ba","s","l","length","rm","x","i","t","push","charAt","join","decode","str","split","out","indexOf","pop","isBase64","data","startsWith","includes","removeHeader","slice","search","getFileFormat","start","end","substr","fromArraybuffer","arraybuffer","chunk","bstr","view","Uint8Array","remainder","byteLength","fromBinaryString","a","b","c","charCodeAt","QeTable","qe","nmps","nlps","switchFlag","arithmetic","ArithmeticDecoder","[object Object]","this","bp","dataEnd","chigh","clow","byteIn","ct","contexts","pos","cx_index","cx_mps","qeTableIcx","qeIcx","d","main"],"mappings":";;;;;;;g4BAAAA,EAAA,gCACA,oBACA,SAAAC,GAEA,OAAAA,EAAAC,OAAA,oBAEAF,EAAA,iCACA,WACA,SAAAG,GAEA,IAAAC,EAAA,WACA,OAAAA,GAGAC,EAAA,IAEAC,EAAA,mEAwIA,OAtIAF,EAAAG,OAAA,SAAAC,GAMA,IAHA,IAAAC,KAAAC,EAAAF,EAAAG,OACAC,EAAAF,EAAA,EACAG,EAAAH,EAAAE,EACAE,EAAA,EAAAA,EAAAD,GAAA,CACA,IAAAE,EAAAP,EAAAM,MAAA,GAAAN,EAAAM,MAAA,EAAAN,EAAAM,KACAL,EAAAO,KAAAV,EAAAW,OAAAF,IAAA,GAAA,KACAN,EAAAO,KAAAV,EAAAW,OAAAF,IAAA,GAAA,KACAN,EAAAO,KAAAV,EAAAW,OAAAF,IAAA,EAAA,KACAN,EAAAO,KAAAV,EAAAW,OAAA,GAAAF,IAGA,OAAAH,GACA,KAAA,EACA,IAAAG,EAAAP,EAAAM,MAAA,GAAAN,EAAAM,MAAA,EACAL,EAAAO,KAAAV,EAAAW,OAAAF,IAAA,GAAA,KACAN,EAAAO,KAAAV,EAAAW,OAAAF,IAAA,GAAA,KACAN,EAAAO,KAAAV,EAAAW,OAAAF,IAAA,EAAA,KACAN,EAAAO,KAAAX,GACA,MAEA,KAAA,EACA,IAAAU,EAAAP,EAAAM,MAAA,GACAL,EAAAO,KAAAV,EAAAW,OAAAF,IAAA,GAAA,KACAN,EAAAO,KAAAV,EAAAW,OAAAF,IAAA,GAAA,KACAN,EAAAO,KAAAX,GACAI,EAAAO,KAAAX,GAIA,OAAAI,EAAAS,KAAA,KAGAd,EAAAe,OAAA,SAAAC,GAKA,IAFA,IAAAX,EAAAW,EAAAC,MAAA,IAAAC,KACAZ,EAAAD,EAAAE,OACAF,IAAAC,IAAAL,IACA,IAAA,IAAAS,EAAA,EAAAA,EAAAJ,GAAA,CACA,IAAAK,EAAAT,EAAAiB,QAAAd,EAAAK,OAAA,GACAA,GAAAJ,IAAAK,GAAAT,EAAAiB,QAAAd,EAAAK,OAAA,IACAA,GAAAJ,IAAAK,GAAAT,EAAAiB,QAAAd,EAAAK,OAAA,GACAA,GAAAJ,IAAAK,GAAAT,EAAAiB,QAAAd,EAAAK,OACAQ,EAAAN,KAAAD,IAAA,GAAA,KACAO,EAAAN,KAAAD,IAAA,EAAA,KACAO,EAAAN,KAAA,IAAAD,GAGA,KAAA,GAAAO,EAAAA,EAAAX,OAAA,IAAAW,EAAAE,MACA,OAAAF,GApEAlB,EAAAqB,SAAA,SAAAC,GACA,GAAA,iBAAAA,EACA,OAAA,EAIA,GAAAA,EAAAC,WAAA,SACA,OAAA,EAIA,IAAA,IAAAb,EAAA,EAAAA,EAAAY,EAAAf,OAAAG,IACA,IAAAR,EAAAsB,SAAAF,EAAAT,OAAAH,IAEA,OAAA,EAIA,OAAA,GAYAV,EAAAyB,aAAA,SAAAH,GACA,OAAAA,EAAAI,MAAAJ,EAAAK,OAAA,YAAA,IAUA3B,EAAA4B,cAAA,SAAAN,GACA,IAAAO,EAAAP,EAAAH,QAAA,KAAA,EACAW,EAAAR,EAAAH,QAAA,KAEA,OAAAG,EAAAS,OAAAF,EAAAC,EAAAD,IAUA7B,EAAAgC,gBAAA,SAAAC,GAWA,IAVA,IAOAC,EAPAC,EAAA,GAEAC,EAAA,IAAAC,WAAAJ,GACAK,EAAAF,EAAAG,WAAA,EACAhC,EAAA6B,EAAAG,WAAAD,EAMA5B,EAAA,EAAAA,EAAAH,EAAAG,GAAA,EAEAwB,EAAAE,EAAA1B,IAAA,GAAA0B,EAAA1B,EAAA,IAAA,EAAA0B,EAAA1B,EAAA,GAOAyB,GAAAjC,GALA,SAAAgC,IAAA,IAKAhC,GAJA,OAAAgC,IAAA,IAIAhC,GAHA,KAAAgC,IAAA,GAGAhC,EAFA,GAAAgC,GA0BA,OApBA,IAAAI,GAEAJ,EAAAE,EAAA7B,GAKA4B,GAAAjC,GAHA,IAAAgC,IAAA,GAGAhC,GAFA,EAAAgC,IAAA,GAEA,MAEA,IAAAI,IAEAJ,EAAAE,EAAA7B,IAAA,EAAA6B,EAAA7B,EAAA,GAMA4B,GAAAjC,GAJA,MAAAgC,IAAA,IAIAhC,GAHA,KAAAgC,IAAA,GAGAhC,GAFA,GAAAgC,IAAA,GAEA,KAGAC,GAUAnC,EAAAwC,iBAAA,SAAAxB,GAOA,IANA,IAIAyB,EAAAC,EAAAC,EAJAR,EAAA,GACAG,EAAAtB,EAAAT,OAAA,EACAA,EAAAS,EAAAT,OAAA+B,EAIA5B,EAAA,EAAAA,EAAAH,EAAAG,GAAA,EAEA+B,EAAA,IAAAzB,EAAA4B,WAAAlC,GACAgC,EAAA1B,EAAA4B,WAAAlC,EAAA,GACAiC,EAAA3B,EAAA4B,WAAAlC,EAAA,GAEAyB,GAAAjC,EAAAW,OAAA4B,GAAA,GACAN,GAAAjC,EAAAW,QAAA,EAAA4B,IAAA,GAAA,IAAAC,IAAA,GACAP,GAAAjC,EAAAW,QAAA,GAAA6B,IAAA,GAAA,IAAAC,IAAA,GACAR,GAAAjC,EAAAW,OAAA,GAAA8B,GAsBA,OAnBA,IAAAL,GAEAG,EAAA,IAAAzB,EAAA4B,WAAAlC,GAEAyB,GAAAjC,EAAAW,OAAA4B,GAAA,GACAN,GAAAjC,EAAAW,QAAA,EAAA4B,IAAA,GACAN,GAAA,MAEA,IAAAG,IAEAG,EAAA,IAAAzB,EAAA4B,WAAAlC,GACAgC,EAAA1B,EAAA4B,WAAAlC,EAAA,GAEAyB,GAAAjC,EAAAW,OAAA4B,GAAA,GACAN,GAAAjC,EAAAW,QAAA,EAAA4B,IAAA,GAAA,IAAAC,IAAA,GACAP,GAAAjC,EAAAW,QAAA,GAAA6B,IAAA,GACAP,GAAA,KAGAA,GAGApC,EAAAC,OAAAA,IAGAJ,EAAA,qCACA,WACA,SAAAG,GAEA,aACA,MAAA8C,IAEAC,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IA0FA,OAAAlD,EAAAmD,YAAAC,wBAtFAC,YAAA9B,EAAAO,EAAAC,GACAuB,KAAA/B,KAAAA,EACA+B,KAAAC,GAAAzB,EACAwB,KAAAE,QAAAzB,EACAuB,KAAAG,MAAAlC,EAAAO,GACAwB,KAAAI,KAAA,EACAJ,KAAAK,SACAL,KAAAG,MAAAH,KAAAG,OAAA,EAAA,MAAAH,KAAAI,MAAA,EAAA,IACAJ,KAAAI,KAAAJ,KAAAI,MAAA,EAAA,MACAJ,KAAAM,IAAA,EACAN,KAAAZ,EAAA,MAEAW,SACA,MAAA9B,EAAA+B,KAAA/B,KACA,IAAAgC,EAAAD,KAAAC,GACA,MAAAhC,EAAAgC,GACAhC,EAAAgC,EAAA,GAAA,KACAD,KAAAI,MAAA,MACAJ,KAAAM,GAAA,IAEAL,IACAD,KAAAI,MAAAnC,EAAAgC,IAAA,EACAD,KAAAM,GAAA,EACAN,KAAAC,GAAAA,IAGAA,IACAD,KAAAI,MAAAH,EAAAD,KAAAE,QAAAjC,EAAAgC,IAAA,EAAA,MACAD,KAAAM,GAAA,EACAN,KAAAC,GAAAA,GAEAD,KAAAI,KAAA,QACAJ,KAAAG,OAAAH,KAAAI,MAAA,GACAJ,KAAAI,MAAA,OAGAL,QAAAQ,EAAAC,GACA,IAAAC,EAAAF,EAAAC,IAAA,EAAAE,EAAA,EAAAH,EAAAC,GACA,MAAAG,EAAAnB,EAAAiB,GACAG,EAAAD,EAAAlB,GACA,IAAAoB,EACAzB,EAAAY,KAAAZ,EAAAwB,EACA,GAAAZ,KAAAG,MAAAS,EACAxB,EAAAwB,GACAxB,EAAAwB,EACAC,EAAAH,EACAD,EAAAE,EAAAjB,OAEAN,EAAAwB,EACAC,EAAA,EAAAH,EACA,IAAAC,EAAAf,aACAc,EAAAG,GAEAJ,EAAAE,EAAAhB,UAEA,CAEA,GADAK,KAAAG,OAAAS,EACA,IAAA,MAAAxB,GAEA,OADAY,KAAAZ,EAAAA,EACAsB,EAEAtB,EAAAwB,GACAC,EAAA,EAAAH,EACA,IAAAC,EAAAf,aACAc,EAAAG,GAEAJ,EAAAE,EAAAhB,OAEAkB,EAAAH,EACAD,EAAAE,EAAAjB,MAGA,GACA,IAAAM,KAAAM,IACAN,KAAAK,SAEAjB,IAAA,EACAY,KAAAG,MAAAH,KAAAG,OAAA,EAAA,MAAAH,KAAAI,MAAA,GAAA,EACAJ,KAAAI,KAAAJ,KAAAI,MAAA,EAAA,MACAJ,KAAAM,WACA,IAAA,MAAAlB,IAGA,OAFAY,KAAAZ,EAAAA,EACAmB,EAAAC,GAAAC,GAAA,EAAAC,EACAG,OAKAtE,EAAA,+BACA,UACA,WACA,gBACA,SAAAG,GAEA,OAAAA,IAEAH,EAAA,0BAAA,+BAAA,SAAAuE,GAAA,OAAAA","file":"../skylark-security-codec.js","sourcesContent":["define('skylark-security-codec/codec',[\r\n    \"skylark-langx-ns\"\r\n], function(skylark,) {\r\n\r\n\treturn skylark.attach(\"security.codec\");\r\n});\ndefine('skylark-security-codec/base64',[\r\n    \"./codec\"\r\n], function(codec) {\r\n\r\n    var base64 = function() {\r\n        return base64;\r\n    }\r\n\r\n\tvar p=\"=\";\r\n\r\n\tvar codetab=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n\tbase64.encode=function(/* byte[] */ba){\r\n\t\t// summary:\r\n\t\t//\t\tEncode an array of bytes as a base64-encoded string\r\n\t\tvar s=[], l=ba.length;\r\n\t\tvar rm=l%3;\r\n\t\tvar x=l-rm;\r\n\t\tfor (var i=0; i<x;){\r\n\t\t\tvar t=ba[i++]<<16|ba[i++]<<8|ba[i++];\r\n\t\t\ts.push(codetab.charAt((t>>>18)&0x3f));\r\n\t\t\ts.push(codetab.charAt((t>>>12)&0x3f));\r\n\t\t\ts.push(codetab.charAt((t>>>6)&0x3f));\r\n\t\t\ts.push(codetab.charAt(t&0x3f));\r\n\t\t}\r\n\t\t//\tdeal with trailers, based on patch from Peter Wood.\r\n\t\tswitch(rm){\r\n\t\t\tcase 2:{\r\n\t\t\t\tvar t=ba[i++]<<16|ba[i++]<<8;\r\n\t\t\t\ts.push(codetab.charAt((t>>>18)&0x3f));\r\n\t\t\t\ts.push(codetab.charAt((t>>>12)&0x3f));\r\n\t\t\t\ts.push(codetab.charAt((t>>>6)&0x3f));\r\n\t\t\t\ts.push(p);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 1:{\r\n\t\t\t\tvar t=ba[i++]<<16;\r\n\t\t\t\ts.push(codetab.charAt((t>>>18)&0x3f));\r\n\t\t\t\ts.push(codetab.charAt((t>>>12)&0x3f));\r\n\t\t\t\ts.push(p);\r\n\t\t\t\ts.push(p);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn s.join(\"\");\t//\tstring\r\n\t};\r\n\r\n\tbase64.decode=function(/* string */str){\r\n\t\t// summary:\r\n\t\t//\t\tConvert a base64-encoded string to an array of bytes\r\n\t\tvar s=str.split(\"\"), out=[];\r\n\t\tvar l=s.length;\r\n\t\twhile(s[--l]==p){ }\t//\tstrip off trailing padding\r\n\t\tfor (var i=0; i<l;){\r\n\t\t\tvar t=codetab.indexOf(s[i++])<<18;\r\n\t\t\tif(i<=l){ t|=codetab.indexOf(s[i++])<<12 };\r\n\t\t\tif(i<=l){ t|=codetab.indexOf(s[i++])<<6 };\r\n\t\t\tif(i<=l){ t|=codetab.indexOf(s[i++]) };\r\n\t\t\tout.push((t>>>16)&0xff);\r\n\t\t\tout.push((t>>>8)&0xff);\r\n\t\t\tout.push(t&0xff);\r\n\t\t}\r\n\t\t//\tstrip off any null bytes\r\n\t\twhile(out[out.length-1]==0){ out.pop(); }\r\n\t\treturn out;\t//\tbyte[]\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Check if some data is encoded as base64.\r\n\t *\r\n\t * This is a fast test that picks some random position in the string to check if they are valid base64 characters.\r\n\t *\r\n\t * @method isBase64\r\n\t * @param {Object} data Data to be tested.\r\n\t * @return {Boolean} True if data is base64 encoded, false otherwise.\r\n\t */\r\n\tbase64.isBase64 = function(data) {\r\n\t\tif(typeof data !== \"string\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//Check if it has a base64 header\r\n\t\tif(data.startsWith(\"data:\")){\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t//Check string data\r\n\t\tfor(var i = 0; i < data.length; i++) {\r\n\t\t\tif(!codetab.includes(data.charAt(i)))\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\t/**\r\n\t * Remove base64 header from data.\r\n\t * \r\n\t * Usefull for removing the heander from image, audio, video, etc.\r\n\t *\r\n\t * @method removeHeader\r\n\t * @param {String} base64\r\n\t * @return {String} base64\r\n\t */\r\n\tbase64.removeHeader = function(data) {\r\n\t\treturn data.slice(data.search(\";base64,\") + 8);\r\n\t};\r\n\r\n\t/**\r\n\t * Get the file format present in the base64 string.\r\n\t *\r\n\t * @method getFileFormat\r\n\t * @param  {String} data Base64 data.\r\n\t * @return {String} File format present in the JSON data.\r\n\t */\r\n\tbase64.getFileFormat = function(data) \t{\r\n\t\tvar start = data.indexOf(\"/\") + 1;\r\n\t\tvar end = data.indexOf(\";\");\r\n\t\t\r\n\t\treturn data.substr(start, end - start);\r\n\t};\r\n\r\n\t/**\r\n\t * Create base64 string from arraybuffer.\r\n\t *\r\n\t * @method fromArraybuffer\r\n\t * @param {Arraybuffer} arraybuffer\r\n\t * @return {String} base64\r\n\t */\r\n\tbase64.fromArraybuffer = function(arraybuffer) {\r\n\t\tvar bstr = \"\";\r\n\r\n\t\tvar view = new Uint8Array(arraybuffer);\r\n\t\tvar remainder = view.byteLength % 3;\r\n\t\tvar length = view.byteLength - remainder;\r\n\r\n\t\tvar a, b, c, d;\r\n\t\tvar chunk;\r\n\r\n\t\t//Chunks of 3 bytes for cycle\r\n\t\tfor(var i = 0; i < length; i += 3)\r\n\t\t{\r\n\t\t\tchunk = (view[i] << 16) | (view[i + 1] << 8) | view[i + 2];\r\n\r\n\t\t\ta = (chunk & 16515072) >> 18;\r\n\t\t\tb = (chunk & 258048) >> 12;\r\n\t\t\tc = (chunk & 4032) >> 6;\r\n\t\t\td = chunk & 63;\r\n\r\n\t\t\tbstr += codetab[a] + codetab[b] + codetab[c] + codetab[d]\r\n\t\t}\r\n\r\n\t\t//Remaining bytes\r\n\t\tif(remainder === 1)\r\n\t\t{\r\n\t\t\tchunk = view[length];\r\n\r\n\t\t\ta = (chunk & 252) >> 2;\r\n\t\t\tb = (chunk & 3) << 4;\r\n\r\n\t\t\tbstr += codetab[a] + codetab[b] + \"==\";\r\n\t\t}\r\n\t\telse if(remainder === 2)\r\n\t\t{\r\n\t\t\tchunk = (view[length] << 8) | view[length + 1];\r\n\r\n\t\t\ta = (chunk & 64512) >> 10;\r\n\t\t\tb = (chunk & 1008) >> 4;\r\n\t\t\tc = (chunk & 15) << 2;\r\n\r\n\t\t\tbstr += codetab[a] + codetab[b] + codetab[c] + \"=\";\r\n\t\t}\r\n\r\n\t\treturn bstr;\r\n\t};\r\n\r\n\t/**\r\n\t * Create base64 string from binary string.\r\n\t *\r\n\t * @method fromBinaryString\r\n\t * @param {String} str\r\n\t * @return {String} base64\r\n\t */\r\n\tbase64.fromBinaryString = function(str) {\r\n\t\tvar bstr = \"\";\r\n\t\tvar remainder = str.length % 3;\r\n\t\tvar length = str.length - remainder;\r\n\r\n\t\tvar a, b, c;\r\n\r\n\t\tfor(var i = 0; i < length; i += 3)\r\n\t\t{\r\n\t\t\ta = str.charCodeAt(i) & 0xff;\r\n\t\t\tb = str.charCodeAt(i + 1);\r\n\t\t\tc = str.charCodeAt(i + 2);\r\n\r\n\t\t\tbstr += codetab.charAt(a >> 2);\r\n\t\t\tbstr += codetab.charAt(((a & 0x3) << 4) | ((b & 0xF0) >> 4));\r\n\t\t\tbstr += codetab.charAt(((b & 0xF) << 2) | ((c & 0xC0) >> 6));\r\n\t\t\tbstr += codetab.charAt(c & 0x3F);\r\n\t\t}\r\n\t\t\r\n\t\tif(remainder === 1)\r\n\t\t{\r\n\t\t\ta = str.charCodeAt(i) & 0xff;\r\n\r\n\t\t\tbstr += codetab.charAt(a >> 2);\r\n\t\t\tbstr += codetab.charAt((a & 0x3) << 4);\r\n\t\t\tbstr += \"==\";\r\n\t\t}\r\n\t\telse if(remainder === 2)\r\n\t\t{\r\n\t\t\ta = str.charCodeAt(i) & 0xff;\r\n\t\t\tb = str.charCodeAt(i + 1);\r\n\r\n\t\t\tbstr += codetab.charAt(a >> 2);\r\n\t\t\tbstr += codetab.charAt(((a & 0x3) << 4) | ((b & 0xF0) >> 4));\r\n\t\t\tbstr += codetab.charAt((b & 0xF) << 2);\r\n\t\t\tbstr += \"=\";\r\n\t\t}\r\n\r\n\t\treturn bstr;\r\n\t};\r\n\r\n    return codec.base64 = base64;\r\n});\r\n\ndefine('skylark-security-codec/arithmetic',[\r\n    \"./codec\"\r\n], function(codec) {\r\n    //ref:pdfjs>src/core/arithmetic_decoder.js\r\n    'use strict';\r\n    const QeTable = [\r\n        {\r\n            qe: 22017,\r\n            nmps: 1,\r\n            nlps: 1,\r\n            switchFlag: 1\r\n        },\r\n        {\r\n            qe: 13313,\r\n            nmps: 2,\r\n            nlps: 6,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 6145,\r\n            nmps: 3,\r\n            nlps: 9,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 2753,\r\n            nmps: 4,\r\n            nlps: 12,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 1313,\r\n            nmps: 5,\r\n            nlps: 29,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 545,\r\n            nmps: 38,\r\n            nlps: 33,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 22017,\r\n            nmps: 7,\r\n            nlps: 6,\r\n            switchFlag: 1\r\n        },\r\n        {\r\n            qe: 21505,\r\n            nmps: 8,\r\n            nlps: 14,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 18433,\r\n            nmps: 9,\r\n            nlps: 14,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 14337,\r\n            nmps: 10,\r\n            nlps: 14,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 12289,\r\n            nmps: 11,\r\n            nlps: 17,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 9217,\r\n            nmps: 12,\r\n            nlps: 18,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 7169,\r\n            nmps: 13,\r\n            nlps: 20,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 5633,\r\n            nmps: 29,\r\n            nlps: 21,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 22017,\r\n            nmps: 15,\r\n            nlps: 14,\r\n            switchFlag: 1\r\n        },\r\n        {\r\n            qe: 21505,\r\n            nmps: 16,\r\n            nlps: 14,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 20737,\r\n            nmps: 17,\r\n            nlps: 15,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 18433,\r\n            nmps: 18,\r\n            nlps: 16,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 14337,\r\n            nmps: 19,\r\n            nlps: 17,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 13313,\r\n            nmps: 20,\r\n            nlps: 18,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 12289,\r\n            nmps: 21,\r\n            nlps: 19,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 10241,\r\n            nmps: 22,\r\n            nlps: 19,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 9217,\r\n            nmps: 23,\r\n            nlps: 20,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 8705,\r\n            nmps: 24,\r\n            nlps: 21,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 7169,\r\n            nmps: 25,\r\n            nlps: 22,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 6145,\r\n            nmps: 26,\r\n            nlps: 23,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 5633,\r\n            nmps: 27,\r\n            nlps: 24,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 5121,\r\n            nmps: 28,\r\n            nlps: 25,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 4609,\r\n            nmps: 29,\r\n            nlps: 26,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 4353,\r\n            nmps: 30,\r\n            nlps: 27,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 2753,\r\n            nmps: 31,\r\n            nlps: 28,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 2497,\r\n            nmps: 32,\r\n            nlps: 29,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 2209,\r\n            nmps: 33,\r\n            nlps: 30,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 1313,\r\n            nmps: 34,\r\n            nlps: 31,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 1089,\r\n            nmps: 35,\r\n            nlps: 32,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 673,\r\n            nmps: 36,\r\n            nlps: 33,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 545,\r\n            nmps: 37,\r\n            nlps: 34,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 321,\r\n            nmps: 38,\r\n            nlps: 35,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 273,\r\n            nmps: 39,\r\n            nlps: 36,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 133,\r\n            nmps: 40,\r\n            nlps: 37,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 73,\r\n            nmps: 41,\r\n            nlps: 38,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 37,\r\n            nmps: 42,\r\n            nlps: 39,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 21,\r\n            nmps: 43,\r\n            nlps: 40,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 9,\r\n            nmps: 44,\r\n            nlps: 41,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 5,\r\n            nmps: 45,\r\n            nlps: 42,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 1,\r\n            nmps: 45,\r\n            nlps: 43,\r\n            switchFlag: 0\r\n        },\r\n        {\r\n            qe: 22017,\r\n            nmps: 46,\r\n            nlps: 46,\r\n            switchFlag: 0\r\n        }\r\n    ];\r\n    class ArithmeticDecoder {\r\n        constructor(data, start, end) {\r\n            this.data = data;\r\n            this.bp = start;\r\n            this.dataEnd = end;\r\n            this.chigh = data[start];\r\n            this.clow = 0;\r\n            this.byteIn();\r\n            this.chigh = this.chigh << 7 & 65535 | this.clow >> 9 & 127;\r\n            this.clow = this.clow << 7 & 65535;\r\n            this.ct -= 7;\r\n            this.a = 32768;\r\n        }\r\n        byteIn() {\r\n            const data = this.data;\r\n            let bp = this.bp;\r\n            if (data[bp] === 255) {\r\n                if (data[bp + 1] > 143) {\r\n                    this.clow += 65280;\r\n                    this.ct = 8;\r\n                } else {\r\n                    bp++;\r\n                    this.clow += data[bp] << 9;\r\n                    this.ct = 7;\r\n                    this.bp = bp;\r\n                }\r\n            } else {\r\n                bp++;\r\n                this.clow += bp < this.dataEnd ? data[bp] << 8 : 65280;\r\n                this.ct = 8;\r\n                this.bp = bp;\r\n            }\r\n            if (this.clow > 65535) {\r\n                this.chigh += this.clow >> 16;\r\n                this.clow &= 65535;\r\n            }\r\n        }\r\n        readBit(contexts, pos) {\r\n            let cx_index = contexts[pos] >> 1, cx_mps = contexts[pos] & 1;\r\n            const qeTableIcx = QeTable[cx_index];\r\n            const qeIcx = qeTableIcx.qe;\r\n            let d;\r\n            let a = this.a - qeIcx;\r\n            if (this.chigh < qeIcx) {\r\n                if (a < qeIcx) {\r\n                    a = qeIcx;\r\n                    d = cx_mps;\r\n                    cx_index = qeTableIcx.nmps;\r\n                } else {\r\n                    a = qeIcx;\r\n                    d = 1 ^ cx_mps;\r\n                    if (qeTableIcx.switchFlag === 1) {\r\n                        cx_mps = d;\r\n                    }\r\n                    cx_index = qeTableIcx.nlps;\r\n                }\r\n            } else {\r\n                this.chigh -= qeIcx;\r\n                if ((a & 32768) !== 0) {\r\n                    this.a = a;\r\n                    return cx_mps;\r\n                }\r\n                if (a < qeIcx) {\r\n                    d = 1 ^ cx_mps;\r\n                    if (qeTableIcx.switchFlag === 1) {\r\n                        cx_mps = d;\r\n                    }\r\n                    cx_index = qeTableIcx.nlps;\r\n                } else {\r\n                    d = cx_mps;\r\n                    cx_index = qeTableIcx.nmps;\r\n                }\r\n            }\r\n            do {\r\n                if (this.ct === 0) {\r\n                    this.byteIn();\r\n                }\r\n                a <<= 1;\r\n                this.chigh = this.chigh << 1 & 65535 | this.clow >> 15 & 1;\r\n                this.clow = this.clow << 1 & 65535;\r\n                this.ct--;\r\n            } while ((a & 32768) === 0);\r\n            this.a = a;\r\n            contexts[pos] = cx_index << 1 | cx_mps;\r\n            return d;\r\n        }\r\n    }\r\n    return codec.arithmetic = { ArithmeticDecoder };\r\n});\ndefine('skylark-security-codec/main',[\r\n    \"./codec\",\r\n    \"./base64\",\r\n    \"./arithmetic\"\r\n], function(codec) {\r\n\r\n\treturn codec;\r\n});\ndefine('skylark-security-codec', ['skylark-security-codec/main'], function (main) { return main; });\n\n"]}